#!/usr/bin/env python
# -*- coding: utf-8 -*-
import applescript
import google_chrome.fullscreen
import os
import public
import runcmd
import values


@public.add
def tell(code):
    """execute applescript `tell application "Google Chrome" ...`"""
    return applescript.tell.app("VLC", code)._raise().out


def _run(args):
    return runcmd.run(["google-chrome"] + list(args))._raise().out


@public.add
def close(urls):
    """close tabs with url(s)"""
    _run(["close"] + values.get(urls))


@public.add
def open(urls):
    """open url(s)"""
    _run(["open"] + values.get(urls))


@public.add
def refresh(urls):
    """refresh url(s)"""
    return _run(["refresh"] + values.get(urls))


@public.add
def url():
    """return current tab url"""
    return _run(["url"])


@public.add
def urls():
    """return list of tabs urls"""
    return _run(["urls"]).splitlines()


"""Google Chrome.app process functions"""


@public.add
def activate():
    """open Google Chrome and bring it to front"""
    google_chrome.tell('activate')


@public.add
def kill():
    """kill Google Chrome.app process"""
    _pid = pid()
    if _pid:
        os.popen("kill %s &> /dev/null" % _pid)


@public.add
def pid():
    """return Google Chrome.app pid"""
    for l in os.popen("ps -ax").read().splitlines():
        if "Google Chrome.app" in l:
            return int(list(filter(None, l.split(" ")))[0])


@public.add
def quit():
    """quit Google Chrome.app"""
    google_chrome.tell("quit")
